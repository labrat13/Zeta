++ Список Улучшений Проекта
* Добавлять сюда желаемые фичи для реализации в будущих релизах.
* Пока первый релиз не готов, в нем реализовывать только самое неодбходимое! Остальное записывать сюда, потом распределить по релизам.

+++Тегами распределять задачи по видам деятельности, вручную или автоматически
 * Надо тегами размечать задачи по видам деятельности: Копать, покупать, пилить, изобретать, искать, итп.
 * Раньше предполагался Класс Задачи, его можно было из текста задачи определить автоматически, вот по глаголу.
 * Да и теги мест тоже можно автоматически назначать: нужны словоформы слов для каждого тега. Например, если в тексте задачи есть любая словоформа слова Дача, то и тег места Дача можно автоматически предложить для этой задачи.
    * Тогда объект Тег должен иметь свойство Словоформы, в него надо записать все словоформы или паттерны регекса для поиска таких слов в описании или названии задачи.   

+++Быстрый ввод задач
 * Задачи бывают разных классов по их необходимым свойствам, но для всех обычно предлагается одна универсальная форма с кучей контролов. Пользователь в этой куче контролов теряется, пытаясь для каждого контрола определить, нужен ли он в данном случае и что в него нужно записать, в каком виде.
    * Поэтому пользователь в начале работы с планировщиком быстро устает. 
 * А надо показывать пользователю только необходимые контролы! 
 * Остальные поля прятать на отдельную вкладку - полную карту всех свойств Задачи.
 * Поскольку классов задачи может быть несколько, надо иметь возможность первым шагом выбрать правильный класс Задачи, либо позже быстро изменить этот класс Задачи.
    * Например, если была выбрана простая тодо-задача, а потом окажется, что надо указать дату начала или окончания Задачи.
 * Хотя пользователь быстро привыкает к стабильному интерфейсу, и потом работает с ним менее трудоемко, но:
    1. Все равно надо держать пользовательский интерфейс минималистичным.
    2. Я плохо привыкаю, медленно, поскольку разнообразия у меня много.
    3. Все равно, нужна философия, платформа, плюсы и минусы этого способа мышления, итп. Нужна концепция планирования и исполнения задач, значит, нужно писать книгу-инструкцию об этом образе жизни. Одним только файлом справки приложения тут не обойтись. 

+++Просмотр прошлых и будущих задач окном регулируемой ширины
 * В планировщике нет напоминаний о задачах. Я должен сам заглядывать в него каждый день.
 * Даже если реализовать напоминания, они не сработают, когда компьютер выключен. 
    * То есть, никогда не сработают, компьютер всегда выключен.
 * Из-за того, что я не каждый день буду заглядывать в этот планировщик, я буду пропускать задачи, назначенные на некоторые дни.
 * Чтобы не пропускать задачи по этой причине, нужно показывать будущие задачи так же, как и прошлые.
 * Предлагается скользящее окно размером в 3..7 дней в каждую сторону, где в хронологическом порядке сверху списка задач Сегодня размещаются прошлые невыполненные задачи, а снизу - будущие задачи. Окно-список задач должно быть прокручено вниз, граница между сегодня и завтра должна быть ровно посередине окна списка задач, и она должна быть отмечена как-либо, чтобы пользователь всегда видел завтрашние задачи и эту границу между прошлыми и будущими задачами. Тогда он не упустит из виду завтрашние задачи, не забудет запустить планировщик для работы по ним. 
 * Размер окна должен регулироваться автоматически или назначаться пользователем, от 1 до 7 дней в будущее.
    * Вручную - через настройки приложения планировщика.
    * Автоматически - как среднестатистическое значение интервалов в сутках между запусками планировщиа пользователем. Например, если планировщик запускается каждый день - ширина окна 1 день. Если раз в неделю - ширина окна 7 дней.
        * Нужно разработать механизм такого статистического подсчета.
        * Нужно хранить в настройках планировщика дату последнего запуска, текущую ширину окна, еще что-то.
        * Это все не поможет, если я буду как всегда, как попало пользоваться: то густо, то пусто. В таком случае лучше сразу установить ширину окна максимальную.  

+++Импорт-Экспорт задач в файлы списков Задач
 * Добавить фичу импорт-экспорт задач в XML файлы-коллекции Задач. Подобно LittleTasks.
 * Будет ли это полезно для хранения TODO-списков? 
 * Потребуется взять класс коллекции Задач из проекта LittleTasks ?
 * Потребуется добавить в класс Задачи код чтения-записи XML данных.
 * Синхронизация задач со смартфона либо другого компьютера, передаваемых в виде XML-файла списка Задач.
    * На смартфоне эти задачи будут изменены, дополнены  и созданы новые, все это надо получить в виде файла и синхронизировать с основной БД планера, ориентируясь по дате модификации элемента.
    * Значит, элемент должен иметь свойство Дата последней модификации, для поддержки синхронизации версий. Либо свойство Версия, но это не гарантирует правильную обработку данных. 

+++Статистика Хранилища Задач
 * Получать статистику по текущему Хранилищу Задач, подобно УАМХ.
 * Отдельным свойством Движка или как объект внутри приложения?
 * Код можно взять из проекта Хранилищ, но его придется переработать.
 * Категории для статистики:
    * общее число задач?
    * число выполненных задач?
    * число остановленных задач?
    * число ожидающих задач?
    * todo: какие еще категории содержимого для этого Хранилища есть?

+++ Внедрить УАМХ для этого проекта
 * сейчас УАМХ не готов для применения. Необходимо сначала его доработать, обновить. Предыдущая попытка применить УАМХ для нового проекта привела к тому, что проект усложнился и остановился из-за противоречий между концепцией задач и УАМХ.
 * решить, можно ли использовать УАМХ. И если да, то как:
    а) копировать код из нее по частям, отдельными решениями.
    б) как библиотеку целиком? 
    - А ее нет целиком - надо собирать, доделывать и подключать к проекту.
    - прошлая попытка использовать УАМХ привела к тому, что проект стал слишком сложным и остановился.
    - Решение: отложить решение о внедрении УАМХ на последующие версии проекта. На третий релиз?
      Сейчас важно быстро сделать себе этот проект как инструмент. 
      Поэтому сейчас выбрать вариант а) таскать из УАМХ необходимые куски технологии.
    - так если УАМХ внедрять, то надо было все по УАМХ делать! А я Настройки из Оператора позаимствовал, а не из УАМХ.
      - там они лучше, чем в УАМХ. Но вот это все теперь надо свести в один набор, а я не могу. Там работы много, а мне некогда!.

