++ Заметка Уровни Пирамиды

Попытка описать происходящие в модели процессы и уточнить их устройство.

- Пятый уровень генерирует задачи по достижению показателей.
  Он отправляет на 4 уровень задания по достижению показателей.
  Эти задания будем далее называть Задачи 4 уровня.
  - а как он узнает о достижении показателей?
    - он периодически требует обновить данные по показателям, и просто вычисляет разность между текущим значением и нормой.
  - а как он узнает, что задача еще не выполнена, чтобы не слать задачи, которые не выполнены, повторно?
    А) если задача есть в списке, и она не выполнена, то не слать новую?
    Б) слать новую задачу только когда состояние Показателя изменилось. 
       Либо слать задачи при перезапуске Планировщика, когда все Показатели должны заново перепроверяться на соответствие норме.
       - тодо: описать процесс Регулярный перезапуск планировщика - для чего он нужен, когда запускается, что делает.
       - вопрос: значит, процесс 5 уровня запускается при изменении какого-либо из Показателей?
       - тодо: нужен способ, чтобы находить в списке входящих задач 4 уровня задачи, соответствующие указанному Показателю.
         - вопрос: к Задаче надо прицепить свойство: ссылку на Показатель.
       - вопрос: что делать со старыми Задачами из списка входящих задач 4 уровня?
         - удалять, чтобы в списке задач оставалась только самая актуальная Задача.
           - но если Задача уже принята к исполнению, она должна быть зафиксирована, тогда ее нельзя удалять.
             А) тогда надо создать новую и добавить в список задач.
		     Б) не создавать новую, а ждать завершения начатой задачи.
                - ждать придется долго - Пользователь может начать и забыть про задачу.
                - тогда таймаут для Задачи определен должен быть. По истечении таймаута (предельного срока завершения задачи) задачу эту заново создать следует.
		        - Задачу надо заблокировать от удаления из списка Задач, поэтому она должна быть отмечена, что она начата и выполняется.
                  - нужно свойство Задачи - флаг, что Задача выполняется.
                  - нужно свойство Задачи - Исполнитель Задачи. Только я пока не знаю, как его использовать, поэтому оно не необходимо пока что.
			В) оставить старую? незачем, поскольку данные изменяются со временем. Нужно удалить старые задачи по Показателям кроме уже принятых к исполнению, оставить только самые свежие задачи по каждому из Показателей.
   - Задачи 4 уровня создаются только по одному из Показателей. В противном случае эти Задачи будет трудно разделять по Показателям для обработки и сводить обратно для отметки о выполнении Задачи.
- Значит, если Задача создана, то что дальше?
  - 4 уровень должен ее как-то превратить в изменение Показателя.
    Пока он может только  создать Задачу для Пользователя и поместить ее в Список Задач Пользователя.
    Когда Пользователь выполнит Задачу Пользователя, он пометит ее решенной.
    Тогда Задачу Пользователя можно удалить из Списка Задач Пользователя и переместить в архив и отметить в логе.
    Тогда 4 уровень должен запустить пересчет текущего значения Показателя как Задачу - Задача подсчета значения Показателя.
    А Задачу Пользователя, отмеченную решенной, должен сопоставить соответствующей ей Задаче 4 уровня, пометить Задачу 4 уровня решенной и удалить из списка входящих задач 4 уровня. 
    - тодо: это надо диаграммой нарисовать а то сейчас я плохо представляю себе, как это все устроено должно быть.
  - когда пользователь отметит задачу решенной Исполнитель 4 уровня получит событие - сообщение об этом, извлечет из Задачи Пользователя Показатель, сопоставит его с Задачей 4 уровня, запустит все, что там надо сделать.
  - Задача Пользователя - Пользователь ее не скоро выполнит, она должна будет ждать.
    Поэтому тут надо:
    А) Ссылку на Показатель как источник Задачи 4 уровня.
    Б) Код-ссылку на Задачу 4 уровня, как причину Задачи/Процесса.
      вопрос: как родительский элемент Задачи Показателя?
    B) Цепочку причин для Задачи: Показатель -> Задача 4 уровня -> Задача Пользователя.
       - Лучше превратить в цепочку: ЗадачаСуществования(содержит указанный Показатель) -> Задача4уровня -> ЗадачаПользователя.
         Тогда ЗадачаСуществования будет корневой объект иерархии классов Задач, а прочие - производные классы, поле Причина будет указывать на родительскую Задачу и в итоге, на Показатель как причину задачи.
 - всего получается:
  - 1 объект ЗадачаСуществования,
    - неправильно, для каждого Показателя нужен свой объект ЗадачаСуществования. 
      ЗадачаСуществования вообще-то введена только для того, чтобы служить родительским классом в классификации задач, и содержать ссылку на Показатель, который и является настоящей причиной задачи. 
  - N объектов Задача4уровня - по числу Показателей или менее. Задача 4 уровня это задача изменения Показателя. 
  - M объектов ЗадачаПользователя - по числу объектов Задача4уровня или более.
     -  если объект Задача Пользователя помечен завершенным, то соответствующий ему объект Задача4уровня не может быть помечен завершенным - он требует собственной обработки для завершения.
        Поэтому объекты Задач должны копировать данные родительских Задач, а не наследовать их напрямую.
        Чтобы в памяти существовала цепочка задач в виде самостоятельных объектов Задач.
 - Для Задач Пользователя потребуется GUI, свойства Название, Описание, таймштампы создания, изменения, исполнения Задачи, код генерации событий исполнения Задачи, событий изменения данных Задачи.
     Также потребуется код хранения ЗадачПользователя в БД, итп.
 - для Задач 4 уровня потребуется то же самое, хранение в БД, но в отдельной таблице для задач 4 уровня.  