++ Заметка Планировщик

Система состоит из отдельных потоков, соединенных очередями сообщений, экранных форм интерфейса пользователя, и БД, которая хранит все данные системы.
Для каждого такого потока надо разработать унифицированный модуль, который будет содержать все необходимое для работы потока:
Очередь входящих сообщений, очередь исходящих сообщений, массив глобальных показателей системы, интерфейс к пользователю, интерфейс загрузчика системы.

Для запуска системы еще нужен процесс старта, который извлекает данные из БД и заносит их в объекты в памяти, очереди сообщений, итп.
И соответствующий процесс остановки системы.

Унифицированный модуль для потока:
- А где хранить входные и выходные очереди сообщений?
  - они должны быть доступны также и для процесса-Загрузчика.
    - очередь входящих сообщений - в объекте модуля.
    - исходящие сообщения - передавать по каналу событий, включив сигнальный семафор после добавления сообщения в очередь.
- как выглядит сообщение:
  - текст для пользователя
  - название сообщения
  - идентификатор сообщения
  - объект - причина сообщения
  - таймштамп создания сообщения
  
- кто извлекает сообщение из очереди?
  - читатель извлекает и уничтожает объект сообщения из своей очереди входящих сообщений.
    - или отправитель? Отправитель его создал, он мог бы его безопасно уничтожить.
    - если это один процесс и несколько потоков, и объект создан не в стеке некоторого потока, то все равно, кто создал объект.
      Он будет уничтожаться по общим правилам.

- пользователь получает от этой системы задачи
  - пользователь создает показатели, указывает для них все свойства.
  - пользователь же пока что работает вместо остальных слоев пирамиды, выполняя задачи, создаваемые слоем 5.
    - и какая ему от этого польза?
      - Пока что все очень просто: поток слоя 5 просматривает список показателей и по каждому из них создает последовательно 2 задачи: 
        1) определить текущее значение показателя; 2) привести значение показателя к идеальному.
        Этот процесс очевидный и тупой, пользователь сам мог бы все это в голове держать, а так это выглядит лишней работой.
      - Пока нет реальных целей - нет и пользы.
        А когда будет реальная цель, то и задачи эти будут иметь смысл. Даже если все так примитивно, этолучше, чем совсем ничего.
        - это зависит от реализации. Но пока опыта применения системы нет, неизвестно, как сделать ее правильно.

 - при запуске программы поток-5 выявил, что показатели нуждаются в обновлении значений. (как он это выявил? таймштамп последнего изменения? )       
   По каждому показателю поток-5 создает задачу "Внести текущие значения показателя НазваниеПоказателя" с текстом
    и ссылкой на форму ввода нового значения соответствующего показателя.
  - поток-5 пересылает это сообщение в очередь входных сообщений поток-4, который играет роль секретаря и либо оформляет сообщение для показа поьзователю в качестве новой задачи на сегодня, либо вызывает ранее определенный код, который ддолжен определить и внести в систему новое значение показателя.
  - далее пользователь может игнорировать переданное ему сообщение или определить и ввести в систему текущее значение запрашиваемого показателя.
  - при изменении показателя после ввода нового значения, поток-5 должен получить извещение о событии изменения показателя, проснуться и пересчитать свои показатели, сформировав новые задачи по достижению оптимального состояния системы.
    - а старые задачи, не исполненные еще - отменить? Что делать с ранее созданными задачами?
    - а может, поток-5 сам будет изменять показатели по переданным значениям? Тогда показатели будут только в его ведении находиться, и более никому не видны.
      - но показатели могут изменяться внешними событиями, незхависимо от системы, теоретически.
        - Это следует заложить сразу, чтобы от системы была практическая польза в будущем.
- что-то не очень понятно, как вся система должна быть устроена! Надо собрать больше идей, и надо разработать  ее части, чтобы уже они уменьшили объем неопределенности в проекте.
- Это явно надстройка над системой планирования задач, она генерирует задачи для балансировки достижения целей. 
   И эти задачи надо представлять пользователю, чтобы он их выполнял. 
   Как это ни автоматизируй, все равно это создает дополнительную работу пользователю.         
   Иногда эта дополнительная работа планирования окупается, иногда - нет.
  - у меня - я просто забываю, что надо было сделать - планирование окупается, если цели реально востребованные, существенные.

- следующий вопрос - а как задача повышения некоторого выбранного показателя должна выполняться?
  - вначале пользователь должен будет ее исполнять как умеет.
  - потом хорошо бы внести в систему предположения, как эту задачу можно выполнить, или хотя бы что-то полезное в этом направлении.
    Вроде списка вариантов решения задачи. Из которых и следует выбирать подходящий способ.
    Автоматически выбирать подходящий способ - слишком сложно для компьютера, но хотя бы список вариантов для оценки пользователем их пригодности в текущей ситуации.
    Форму такого представления еще надо придумать, она определится, наверно, по ходу работы.
    На первое время достаточно будет большого текста для заметок по задаче.
    Но такая задача будет повторяющейся,и надо будет как-то эти случаи однотипных задач группировать, чтобы для них всех было одно это общее окно заметок легкодоступно через переход по ссылке или непосредственно.