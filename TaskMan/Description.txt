Описание предметных сущностей проекта

++Движок
CEngine - класс движка проекта

++БД проекта 
CDatabase - класс адаптера БД
таблицы:
- Elements
- Tagged
- Tasks


++ИдентификаторЭлемента
Идентификатор элемента - уникальный номер элемента внутри Хранилища данных проекта.
Используется для указания элемента в таблицах БД, объектах в памяти.
Для удобства пользователя показывается на экране в виде 3-4 букв класса элемента и номера: TASK01

CElementId - класс идентификатора элемента.
- поле Int32 m_eid

++Менеджер Идентификаторов элемента
Это класс, который управляет выдачей новых уникальных идентификаторов элемента.
Объект этого менеджера всегда висит в памяти как часть Движка.
Инициализируется при запуске Движка, выбирая из БД наибольший ид элемента.
Выдает коду новый ид элемента как +1.

++Элемент 
Базовый класс для всех Сущностей предметной области проекта.
Хранится в БД таблице Elements. Дополнительные поля элементов разных подклассов хранятся в других таблицах согласно классу элемента.
CElement - базовый класс элемента для всех Сущностей предметной области проекта.
Поля:
- CElementId elementId			- идентификатор элемента
- String title					- краткое название элемента
- String description			- однострочное описание элемента
- String remarks				- многострочные заметки по элементу
- DateTime creatime				- дата создания элемента
- DateTime moditime				- дата изменения элемента
- EnumElementType elementType	- код типа элемента: енум EnumElementType Default;Note;Tag;Task;Category
  - записывается в БД, чтобы код знал, где искать дополнительные данные объекта.
- CElement Parent				- ссылка на родительский элемент в дереве элементов
- CTagCollection tags			- список ссылок на объекты тегов
- CElementCollection childs     - список ссылок на дочерние элементы дерева элементов.
  - не хранится в БД, строится дерево элементов по данным из БД.
- EnumCardState cardState		- степень заполненности карточки элемента: енум EnumCardState Default; ОсновныеПоля; ДополнительныеПоля; 
  - не хранится в БД, вычисляется по текущим данным.
- EnumElementState elementState - состояние активности элемента: енум EnumElementState Default; Normal; Deleted
Хранение:
 Данные каждого элемента хранятся в таблице Elements. 
 Данные поля CTagCollection tags хранятся в таблице Tagged как rowid : elementid : tagid
 и соответственно выборка тегов для элемента: select * from Tagged where(elementid = ?)
 а выборка элементов по тегу: select * from Tagged where(tagid = ?)
Удаление:
 Если элемент помечен как удаленный (elementState = EnumElementState.Deleted), то он показывается не на своем месте в дереве элементов, а в разделе Корзина этого дерева.
 При этом способе элемент сохраняет сведения о своем размещении и его легко восстановить при ошибочном удалении.
 Элемент Корзина не хранится в БД, создается искусственно кодом, его нельзя удалить, изменения в его карточке не сохраняются.
 Элемент Корзина отсутствует в дереве выбора элементов, на него нельзя указать ссылкой, нельзя сделать его родительским или подчиненным.
 Элемент, помеченный как удаленный, показывается только в Корзина, и может быть восстановлен сменой статуса через контролы карточки элемента.
 Корзина может быть очищена командой контекстного меню или главного меню приложения. Перед удалением запрашивается подтверждение.
  Элемент, помеченный как удаленный, может быть индивидуально удален командой контекстного меню Удалить.
   Если элемент не был помечен удаленным, он помечается и переносится в Корзину.
   Если элемент уже помечен удаленным, он, после запроса подтверждения, удаляется из БД и Корзины.
 

++Правило
Это запись вроде памятки, которая должна напоминать пользователю, как выполнять некие работы или как относиться к остальным элементам в дереве.
Может быть помечена тегами, но не является задачей и не группирует подзадачи.
Может быть, можно создавать под-правила, но не ясно, как это использовать.

CNote : CElement - класс Правила 
- поле tags указывает на теги элемента.
- поле elementType всегда = EnumElementType.Note
- поле parent  указывает на CCategory CTask CNote объект.
- поскольку дополнительных полей нет, весь объект хранится в таблице элементов.


++Категория
Это группа элементов для группировки разных элементов в разделы, проекты, подпроекты, итп.
Может быть помечена тегами, но не ясно, как это использовать.
Может использоваться для организации дерева тегов, но пока не ясно, насколько это правильно.

CCategory : CElement - класс Категории.
- поле elementType всегда = EnumElementType.Category
- поле parent  указывает на CCategory CTask объект.
- поскольку дополнительных полей нет, весь объект хранится в таблице элементов.

++Тег
Это указание класса элемента для цели быстрого поиска или группировки по характерным признакам.
Должен иметь уникальное среди тегов, короткое название.
Хотя для элемента тег выбирается из дерева как объект, а не вводится названием в строку тегов элемента.
CTag : CElement - класс Тега
- поле tags не используется.
- поле elementType всегда = EnumElementType.Tag
- поле parent  указывает на CCategory CTag объект.
- поскольку дополнительных полей нет, весь объект хранится в таблице элементов.


++Задача
Это собственно задача.
Может включать в себя под-задачи, под-категории, под-правила.
Может быть помечена тегами.

CTask : CElement - класс Задачи
дополнительные поля:
- EnumTaskState taskState           - состояние задачи : енум EnumTaskState Default;Run;Paused;Completed
- EnumTaskPriority taskPriority     - важность задачи : енум EnumTaskPriority Default; Normal; High 
- String result                     - перечень целей задачи, отдельный от описания.
- DateTime taskCompletionDate       - дата завершения задачи, для планировщика.
поля:
- поле elementType всегда = EnumElementType.Task
- дополнительные поля хранятся в таблице Tasks как elementid : taskState : taskPriority : taskCompletionDate : result
- поле parent  указывает на CCategory CTask объект.

++ДеревоЭлементов
- дерево с фильтром типов элементов, как в Инвентарь
  - как отдельная форма для выбора элементов.
  - как контрол левой панели главного окна приложения.
- устройство дерева:
Раздел Задачи (неудаляемый)
    Категория Входящие (неудаляемый)
        Подкатегория 1
            Правило1
            Задача1
Раздел Теги (неудаляемый)
    Категория ТегиКатегорииМеста
        Тег Дача
        Тег Город
        Тег Гараж
Раздел Корзина (неудаляемый)
    УдаленнаяЗадача
    УдаленноеПравило


--------------------------------------------



