Файл рабочих задач для проекта Tasks - Приложение менеджера задач.

02 декабря 2022 - создание проекта

12 декабря 2022
- создание главной формы, по причине необходимости реализовать Процесс запуска приложения.
  + добавлено главное меню и обработчики для его пунктов.
    - не все обработчики главного меню добавлены пока.
  + добавлен тулбар для быстрых кнопок главой формы
    - пока пустой, надо добавить кнопки и разделители по мере выявления потребности в них.
  + добавлен статусбар главной формы.
  + добавлена функция изменения текста заголовка главной формы.
  + добавлена функция изменения текста статусбара главной формы.
  + добавлена функция вывода диалога сообщения об ошибке.
  + добавлена функция запуска файла справки "Справка.chm" из каталога приложения.
    + надо добавить в проект болванку файла справки, чтобы оно работало.
      + добавлена болванка от Инвентарь.
  + добавлены обработчики FormLoad, FormClosing, FormClosed.
    + Наполнены 
  - в левую половину главной формы добавлен TreeView,
    - надо настроить свойства контрола
    - надо привязать события контрола.
    - надо привязать к контролу колекцию иконок с правильными тегами.
      - надо внести эти теги и индексы иконок в документацию проекта.
    - надо привязать к контролу контекстное меню 
      - для него нужны иконки?
      - для каждого типа элемента - свое контекстное меню нужно.
- придумать, что поставить в правую половину главной формы.
  - там должно быть Список Сегодня. Но я пока не знаю, как егореализовать.
    - нужно провести макетирование представления Список Сегодня.
- надо впихать в проект мой контрол текстового редактора или сделать его тут заново.
- надо добавить настройки в файл настроек приложения.
  + AutoStartStorage - поле пути к автооткрываемому хранилищу.
    - надо убедиться, что пользователь может назначить этот путь к Хранилищу через GUI. 
      - и путь должен проверяться на правильность перед назвначением, а не после.
  - хранение последних открытых Хранилищ и флаг, запоминать ли их ?

13 декабря 2022
- добавил в проект файлы-заготовки:
  - Лицензионное соглашение.txt
    - надо заменить ХХХ на название программы.
  - Справка.chm
    - это пустая болванка, ее надо заменить нормальной справкой.
      - надо написать веб-страницы по шаблону и скомпилировать в такой файл справки.
      - шаблон лежит в папке C:\Users\1\Documents\gitrepo\Zeta\TaskMan\Документация
- написал код для создания Хранилища, наскоро, только для отладки.
  - добавил форму StorageCreateForm, которая нужна в процессе создания Хранилища.
  - форма StorageShortInfoForm - оказалась пока что лишней, она более подходит для просмотра свойств Хранилища, а не для создания Хранилища.
  - надо проектировать весь процесс создания Хранилища, сейчас он только для отладки остальных процессов.
  + первый тест успешно, Хранилище создано.
- написан код для открытия Хранилища - вроде хорошо, нарисовал блок-схему, описал ее в вики.
  - пометил места для вставки начала и конца диалога бегущего прогресс-бара, чтобы пользователь ожидал загрузки Хранилища при большой БД.
  - первый тест успешно, Хранилище открыто.
  - блок-схема устарела, ее надо перерисовать и поправить в вики.
- код для закрытия Хранилища вроде бы написан,  наскоро, только для отладки.
  - надо проектировать весь процесс закрытия Хранилища, сейчас он только для отладки остальных процессов.
  - первый тест успешно, Хранилище закрыто.
- надо бы еще создать пункт меню для просмотра и редактирования свойств Хранилища, но пока нет формы с propertyGrid для показа.
+ процесс закрытия главного окна не придуман, сейчас все на авось происходит.
  + готово. весь код должен быть в Form_Closed(). 
  - А в  Form_Closing() должен быть флаг блокировки закрытия формы, пока на экране есть формы карточек элементов.
  
15 декабря 2022
- Новый этап проекта: Отображение дерева элементов
  - дерево элементов в БД уже есть. Надо его показать в:
    - левой панели главного окна
      - нужны процессы работы с Корзиной через ДеревоЭлементов.
      - нужны процессы работы с Хранилищем Файлов через ДеревоЭлементов.
    + отдельном диалоге выбора элементов SelectElementForm.
      + готово 20.12.2022
      + нужен флаг типа элемента для фильтра показываемых элементов.
        + показывать только Категории либо Категории и Теги, либо Категории и Заметки либо Категории и Заметки и Задачи.
        + это флаговый енум, а EnumElementType сейчас не флаговый. 
          + надо переделать EnumElementType во флаговый енум и проверить все места, где он используется.
      + нужен начальный элемент дерева, чтобы не все общее дерево показывать, а только некоторую ветвь.
 - где взять код?
   + Инвентарь  поискать?
     + разобрал Инвентарь, но там все немного старое, оригинальное, но работает.
   - дипломный проект поискать?
     - облом пока что. 
   - есть примеры из МенеджерПроектов
     + на первое время сойдет, но там много недоделок.
- тестировать алгоритм лучше на диалоге выбора элементов, там меньше возни, неудачный класс можно просто удалить и все заново начать.

18 декабря 2022
- Дерево элементов из БД отображается в отдельном диалоге выбора элементов SelectElementForm.
  Этот диалог используется как тестовый полигон для коды дерева элементов.
  Переносить в главную форму пока еще рано. Код еще надо пошлифовать.
  - форма не должна показывать удаленные элементы - вроде это сделано.
    - эта форма не годится для показа элементов из Корзины, поскольку они удаленные. Тут нужен другой код?
      - Корзина это виртуальный каталог, там все равно нужен другой код. 
        Но есть проблема: если в корзину складывать удаленные элементы в один ряд, будет непонятно, откуда они.
        А если складывать с каталогами, в этих каталогах не найдешь ничего потом.
        Вариант: удаленному элементу в корзине приписывать путь в дереве, по которому он реально располагается, как описание ноды.
        Но это потребует из БД извлечь все удаленные элементы, для каждого из них построить цепочку ид и текстовый путь.
        Это нагружать Бд будет сильно, наверное. Потом разберусь с этой проблемой.
        TODO: перенести эту проблему в вики а сюда вставить только ссылку на вики. 
        Корзину надо проектировать отдельной темой.
  - форма не должна показывать элементы, которые не указаны в фильтре типа допустимых элементов, кроме категорий, которые соединяют всю структуру.
    + вроде сделано.
  - форма должна возвращать  выбранный элемент только одного из тех типов, которые указаны в фильтре типа допустимых элементов.
    + вроде сделано.
  - форма должна возвращать ид нового выбранного элемента, а пока она ничего не возвращает.
    - а точно ид, а не объект? Объект намного универсальнее, ид из него получить проще, и другие свойства тоже под рукой.
    + форма возвращает объект элемента.
  - форма должна корректно обрабатывать ошибки и не допускать повреждения БД или сеанса БД.
    - это все должен делать вызывающий форму код. Там проще все это ловить. 
  - форма должна сохранять между показами формы позицию на экране и размер окна.
    + сделано.
  - обработчики событий дерева реализованы неправильно. Надо поискать пример в интернете, чтобы потом меньше исправлять.
    + переделал по примеру из Инвентарь: половина из Инвентарь, половина того, что сам сочинял вчера.
      Выбрал лучшее из обоих версий, все польза от проделанной работы.
- Корзина и другие виртиуальные элементы в этом дереве не реализованы пока что.
  - их можно реализовать в производном классе менеджера дерева, а то многовато тут получается параметров передавать в форму.

18 декабря 2022
+ форма SelectElementForm готова: 
  + Справа добавлен текстбокс расширенного описания элемента.
  + Позиция и размеры формы сохраняются в настройках приложения.
  + Форма возвращает объект выбранного элемента.
  + БД открыта на все время показа формы.
  + исключения должен ловить вызывающий форму код.
  + менеджер показывает форму, элементы выбираются, вроде бы все работает.

20 декабря 2022
 + добавить сохранение позиции и размера главной формы в настройках приложения.
   - done
 + добавить закрытие открытого Хранилища при закрытии формы.
   - done
 + добавить заготовки текстов полей элементов для форм карточек элементов, в настройках приложения.
   - done. 
 - надо потом в карточках элементов их загружать, не забыть что они есть.
 - надо добавить средство редактирования этих текстов пользователем (диалог с текстбоксом и кнопками Ок Отмена ?)
 
 Цель: отобразить дерево элементов в главном окне приложения.
 - использовать новый менеджер дерева, производный от существующего?
   - так в Инвентарь было сделано. Только код уж очень другой, и полей меньше надо. Лучше заново написать.
 - фильтра допустимых элементов тут не надо, надо показывать элементы всех типов.
 - проверять зависимости иерархии элементов не надо.
 - нужны контекстные меню нод с допустимыми операциями для элементов каждого типа.
   Это надо их на бумаге для каждого типа элементов выписать. Наобум плохо будет.
   А можно на каждый тип элемента свой объект контекстного меню создать, и потом его пополнять - так удобно будет.
   - создать: задачу, заметку.
   - удалить текущий элемент.
   - просмотреть текущий элемент.
   - восстановить элемент корзины.
 - Нужны операции для дерева в целом - в меню Правка или Вид их поместить. 
   - Инвентарь как пример можно установить и посмотреть. Но там тоже корявовато.
 - Нужно куда-то пристроить панель параметров поиска
   - как в Инвентарь, на всегда доступную вкладку справа?
   - и что она будет искать? По типу элемента, по образцу текста в названиях, описаниях, итп текстовых полях?
 - Теги как должны работать? По ним нужна теория.
 - Правая половина главного окна что делает?
   - окно или вкладка Сегодня при старте приложения.
   - информация о выделенном в дереве элементе - как это было в Инвентарь.
     - это позволит быстро просматривать структуру элементов, кликая по дереву слева.
     - но редактировать элементы так неудобно, путаница между просмотром и редактироваием 
        и созданием нового объекта была в Инвентарь. Отдельные карточки элементов лучше должны быть.
   - вкладка поиска предлагается с результатами поиска.
 - надо перечислить работы по этой цели:
   - нужен процесс отображения Корзины в ДеревоЭлементов.
   - нужен процесс отображения ХранилищеФайлов в ДеревоЭлементов.
   - решить, при каком событии дерева показывать карточку Элемента из данной ноды.
     - Это годится, но надо переделать SelectElementForm для того, чтобы он работал подобным образом. 
        Чтобы все деревья в приложении управлялись одинаково. 
       - одиночный клик выделяет и разворачивает ноду и показывает ее свойства.
       - двойной клик выделяет ноду и запускает действие (форму карточки элемента).
       - одиночный правый клик показывает контекстное меню для ноды данного типа элемента.
   - решить, на каждый элемент свой экземпляр формы или одна на всех; мультимодальный режим формы или нет.
     - изучить, можно ли реализовать много карточек одновременно.
     - изучить, как не допускать открытия двух карточек одного элемента. 
   - Придумать теорию про работу с тегами.
     - ими помечают другие элементы, чтобы использовать их как альтернативные категории.
     - но помеченные тегами элементы не показывать в ДеревоЭлементов как субноды тегов?
     - а как тогда теги применять, чтобы быстро и легко?
       Вариант А: кликаешь по тегу в дереве, справа показывается список всех элементов, помеченных этим тегом.
       Список этот вроде окна Сегодня, или окна результатов поиска. Только оформление другое.  
       Свойства тега редактировать только через КарточкаТега, вызываемая через контекстное меню дерева.
       Тег это относительно стабильная сущность, незачем его быстро или часто править. 
     - Получается, работа с тегами не придумана, и теги сейчас - просто чтобы были. 
       Авось потом до них очередь дойдет, может быть. Сейчас некогда.


